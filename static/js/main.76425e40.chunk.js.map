{"version":3,"sources":["components/Social/index.js","components/Source/index.js","components/Project/index.js","components/Skill/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Social","className","href","alt","src","width","height","Component","Source","Project","props","state","description","this","host","fetch","owner","name","then","resp","json","setState","Error","Card","as","url","Body","Title","Text","Skill","strength","Tag","getTag","Badge","App","Container","map","i","Row","Col","md","span","offset","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"uZAqBeA,G,kKAjBX,WACI,OACI,yBAAKC,UAAU,kBACX,uBAAGC,KAAK,8BACJ,yBAAKC,IAAI,SAASC,IAAI,iCAE1B,uBAAGF,KAAK,mDACJ,yBAAKG,MAAM,KAAKC,OAAO,KAAKH,IAAI,gBAAgBC,IAAI,kBAExD,uBAAGF,KAAK,qDACJ,yBAAKG,MAAM,KAAKC,OAAO,KAAKH,IAAI,WAAWC,IAAI,yB,GAX9CG,c,QCaNC,G,kKAXX,WACI,OACI,wBAAIP,UAAU,kBACV,uBAAGC,KAAK,gDACJ,kBAAC,IAAD,Y,GALCK,c,QCoCNE,G,wDAnCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChB,GAAwB,WAApBC,KAAKH,MAAMI,KACXC,MAAM,gCAAD,OAAiCF,KAAKH,MAAMM,MAA5C,YAAqDH,KAAKH,MAAMO,OAChEC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACF,EAAKE,SAAS,CAAET,YAAaO,EAAKP,qBAEvC,CACH,IAAIC,KAAKH,MAAME,YAGX,MAAM,IAAIU,MAAM,yEAFhBT,KAAKQ,SAAS,CAAET,YAAaC,KAAKH,MAAME,iB,oBAMpD,WACI,OACI,kBAACW,EAAA,EAAD,CAAMC,GAAG,IAAItB,KAAMW,KAAKH,MAAMe,IAAKxB,UAAU,WACzC,kBAACsB,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAad,KAAKH,MAAMO,MACxB,kBAACM,EAAA,EAAKK,KAAN,KAAYf,KAAKF,MAAMC,mB,GA7BrBL,c,QCoBPsB,G,kKAnBX,WACI,MAA4B,aAAxBhB,KAAKH,MAAMoB,SACJ,KACiB,eAAxBjB,KAAKH,MAAMoB,SACJ,KACJ,S,oBAGX,WACI,IAAMC,EAAMlB,KAAKmB,SAEjB,OACI,kBAACD,EAAD,CAAK9B,UAAS,sBAAiBY,KAAKH,MAAMoB,WACtC,kBAACG,EAAA,EAAD,KAAQpB,KAAKH,MAAMO,W,GAdfV,cCwEL2B,G,wKA/DX,WACI,OACI,yBAAKjC,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gCACX,kBAACkC,EAAA,EAAD,KACI,wBAAIlC,UAAU,sBAAd,iCAGA,wBAAIA,UAAU,yBAAd,+HAKR,yBAAKA,UAAU,oBACX,kBAACkC,EAAA,EAAD,KACI,yBAAKlC,UAAU,gBACX,wBAAIA,UAAU,sBACV,kBAAC,IAAD,MADJ,WAGA,6BAEQ,CAAC,MAAO,QAAS,aAAc,SAAU,QAAS,UAAW,OAAQ,OAAQ,KAAM,UAAW,UACzFmC,KAAI,SAACnB,EAAMoB,GAAP,OAAa,kBAAC,EAAD,CAAOpB,KAAMA,EAAMa,SAAS,iBAG1D,6BAEQ,CAAC,OAAQ,OAAQ,gBAAiB,YAAa,MAAO,UAAW,kBAC5DM,KAAI,SAACnB,EAAMoB,GAAP,OAAa,kBAAC,EAAD,CAAOpB,KAAMA,EAAMa,SAAS,oBAI9D,yBAAK7B,UAAU,gBACX,wBAAIA,UAAU,sBACV,kBAAC,IAAD,MADJ,aAGA,6BACI,kBAACqC,EAAA,EAAD,CAAKrC,UAAU,eACX,kBAACsC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC,EAAD,CAAS5B,KAAK,SAASE,MAAM,UAAUC,KAAK,QAAQQ,IAAI,YAE5D,kBAACc,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC,EAAD,CACI5B,KAAK,OACLG,KAAK,SACLL,YAAY,8EACZa,IAAI,8CASpC,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA1DElB,cCAEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAAAsC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.76425e40.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './style.css'\r\n\r\nclass Social extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"social ml-auto\">\r\n                <a href=\"https://github.com/clabe45\">\r\n                    <img alt=\"GitHub\" src=\"/github-mark-light-32px.png\"/>\r\n                </a>\r\n                <a href=\"https://stackoverflow.com/users/3783155/clabe45\">\r\n                    <img width=\"48\" height=\"48\" alt=\"StackOverflow\" src=\"/so-icon.png\"/>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/caleb-sacks-249732197\">\r\n                    <img width=\"36\" height=\"36\" alt=\"LinkedIn\" src=\"/li-in-bug.png\"/>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Social","import React, { Component } from 'react'\r\nimport { Code } from 'react-bootstrap-icons'\r\nimport './style.css'\r\n\r\nclass Source extends Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"source ml-auto\">\r\n                <a href=\"https://github.com/clabe45/clabe45.github.io\">\r\n                    <Code />\r\n                </a>\r\n            </h3>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Source","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport './style.css'\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.host === 'github') {\r\n            fetch(`https://api.github.com/repos/${this.props.owner}/${this.props.name}`)\r\n                .then(resp => resp.json())\r\n                .then(resp => {\r\n                    this.setState({ description: resp.description })\r\n                })\r\n        } else {\r\n            if (this.props.description)\r\n                this.setState({ description: this.props.description })\r\n            else\r\n                throw new Error('must provide a description for projects that are not hosted on github')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card as=\"a\" href={this.props.url} className=\"project\">\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.name}</Card.Title>\r\n                    <Card.Text>{this.state.description}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project","import React, { Component } from 'react'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport './style.css'\r\n\r\nclass Skill extends Component {\r\n    getTag() {\r\n        if (this.props.strength === 'advanced')\r\n            return 'h4'\r\n        if (this.props.strength === 'proficient')\r\n            return 'h5'\r\n        return 'span'\r\n    }\r\n\r\n    render() {\r\n        const Tag = this.getTag()\r\n\r\n        return (\r\n            <Tag className={`skill skill-${this.props.strength}`}>\r\n                <Badge>{this.props.name}</Badge>\r\n            </Tag>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skill","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Box, Tools } from 'react-bootstrap-icons'\r\nimport Social from '../Social'\r\nimport Source from '../Source'\r\nimport Project from '../Project'\r\nimport Skill from '../Skill'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './style.css'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"text-center \">\r\n                    <div className=\"mx-0 home-section home-intro\">\r\n                        <Container>\r\n                            <h3 className=\"home-section-title\">\r\n                                Hello, my name is Caleb Sacks\r\n                            </h3>\r\n                            <em className=\"home-section-subtitle\">\r\n                                I am a full stack developer. I love to create games, multimedia tools and any other software that enhances people's lives\r\n                            </em>\r\n                        </Container>\r\n                    </div>\r\n                    <div className=\"home-after-intro\">\r\n                        <Container>\r\n                            <div className=\"home-section\">\r\n                                <h3 className=\"home-section-title\">\r\n                                    <Tools /> Skills\r\n                                </h3>\r\n                                <div>\r\n                                    {\r\n                                        ['git', 'linux', 'typescript', 'python', 'react', 'angular', 'node', 'c/++', 'c#', 'unity3d', 'opengl']\r\n                                            .map((name, i) => <Skill name={name} strength=\"advanced\" />)\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                    {\r\n                                        ['java', 'glsl', 'web audio api', 'socket.io', 'sql', 'express', 'github actions']\r\n                                            .map((name, i) => <Skill name={name} strength=\"proficient\" />)\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"home-section\">\r\n                                <h3 className=\"home-section-title\">\r\n                                    <Box /> Projects\r\n                                </h3>\r\n                                <div>\r\n                                    <Row className=\"project-row\">\r\n                                        <Col md={{ span: 4, offset: 2 }}>\r\n                                            <Project host=\"github\" owner=\"clabe45\" name=\"vidar\" url=\"/vidar\" />\r\n                                        </Col>\r\n                                        <Col md={{ span: 4, offset: 0}}>\r\n                                            <Project\r\n                                                host=\"itch\"\r\n                                                name=\"morakk\"\r\n                                                description=\"A unity survival game that takes place on a planet only inhabited by robots\"\r\n                                                url=\"https://erstelgames.itch.io/morakk\"\r\n                                                />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div >\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n                <Social />\r\n                <Source />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
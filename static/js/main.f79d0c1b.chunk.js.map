{"version":3,"sources":["components/Social/index.js","components/Source/index.js","components/Project/index.js","components/Skill/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Social","className","href","alt","src","width","height","Component","Source","Project","props","state","description","this","setState","host","Error","fetch","owner","name","then","resp","json","typeClass","work","Card","as","url","Body","Title","Text","Skill","strength","Tag","getTag","Badge","App","Container","map","i","Row","Col","md","span","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f79d0c1b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\n\nclass Social extends Component {\n    render() {\n        return (\n            <div className=\"social ml-auto\">\n                <a href=\"https://github.com/clabe45\">\n                    <img alt=\"GitHub\" src=\"/github-mark-light-32px.png\"/>\n                </a>\n                <a href=\"https://stackoverflow.com/users/3783155/clabe45\">\n                    <img width=\"48\" height=\"48\" alt=\"StackOverflow\" src=\"/so-icon.png\"/>\n                </a>\n                <a href=\"https://www.linkedin.com/in/caleb-sacks-249732197\">\n                    <img width=\"36\" height=\"36\" alt=\"LinkedIn\" src=\"/li-in-bug.png\"/>\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default Social","import React, { Component } from 'react'\nimport { Code } from 'react-bootstrap-icons'\nimport './style.css'\n\nclass Source extends Component {\n    render() {\n        return (\n            <h3 className=\"source ml-auto\">\n                <a href=\"https://github.com/clabe45/clabe45.github.io\">\n                    <Code />\n                </a>\n            </h3>\n        )\n    }\n}\n\nexport default Source","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport './style.css'\n\nclass Project extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            description: ''\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.description) {\n            this.setState({ description: this.props.description })\n        } else if (this.props.host === 'github') {\n            fetch(`https://api.github.com/repos/${this.props.owner}/${this.props.name}`)\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.setState({ description: resp.description })\n                })\n        } else {\n            throw new Error('must provide a description for projects that are not hosted on github')\n        }\n    }\n\n    render() {\n        const typeClass = this.props.work ? 'work' : 'personal'\n        return (\n            <Card as=\"a\" href={this.props.url} className={`project project-${typeClass}`}>\n                <Card.Body>\n                    <Card.Title>{this.props.name}</Card.Title>\n                    <Card.Text>{this.state.description}</Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default Project","import React, { Component } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport './style.css'\n\nclass Skill extends Component {\n    getTag() {\n        if (this.props.strength === 'advanced')\n            return 'h4'\n        if (this.props.strength === 'proficient')\n            return 'h5'\n        return 'span'\n    }\n\n    render() {\n        const Tag = this.getTag()\n\n        return (\n            <Tag className={`skill skill-${this.props.strength}`}>\n                <Badge>{this.props.name}</Badge>\n            </Tag>\n        )\n    }\n}\n\nexport default Skill","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Briefcase, Heart, Tools } from 'react-bootstrap-icons'\nimport Social from '../Social'\nimport Source from '../Source'\nimport Project from '../Project'\nimport Skill from '../Skill'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style.css'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"text-center \">\n                    <div className=\"mx-0 home-section home-intro\">\n                        <Container>\n                            <h1 className=\"home-section-title\">\n                                Hello, I'm Caleb\n                            </h1>\n                            <h2 className=\"home-section-subtitle\">\n                                <em>\n                                    I'm a full stack developer. I love creating <strong>sites</strong>, <strong>apps</strong>, <strong>games</strong> and <strong>command lines tools</strong>, especially those related to automation and media processing.\n                                </em>\n                            </h2>\n                        </Container>\n                    </div>\n                    <div className=\"home-after-intro\">\n                        <Container>\n                            <div className=\"home-section\">\n                                <h3 className=\"home-section-title\">\n                                    <Tools /> Skills\n                                </h3>\n                                <div>\n                                    {\n                                        ['git', 'linux', 'typescript', 'python', 'react', 'angular', 'node', 'c/++', 'c#', 'unity3d', 'openai', 'protobufs']\n                                            .map((name, i) => <Skill name={name} strength=\"advanced\" />)\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        ['java', 'opengl', 'glsl', 'web audio api', 'socket.io', 'sql', 'express', 'github actions', 'puppeteer']\n                                            .map((name, i) => <Skill name={name} strength=\"proficient\" />)\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"home-section\">\n                                <h3 className=\"home-section-title\">\n                                    <Briefcase /> Experience\n                                </h3>\n                                <div>\n                                    <Row className=\"project-row\">\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                              work\n                                              name=\"swe intern - youtube tv\"\n                                              description=\"Added opt-in button for show and sports channel notifications\"\n                                              />\n                                        </Col>\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                              work\n                                              name=\"swe intern - markel corp\"\n                                              description=\"Supported agile price estimation team across the stack\"\n                                              />\n                                        </Col>\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                              work\n                                              name=\"sys admin - clark university\"\n                                              description=\"Manage high-performance computing cluster\"\n                                              />\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                            <div className=\"home-section\">\n                                <h3 className=\"home-section-title\">\n                                    <Heart /> Personal Projects\n                                </h3>\n                                <div>\n                                    <Row className=\"project-row\">\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                              host=\"github\"\n                                              owner=\"clabe45\"\n                                              name=\"shulkr\"\n                                              url=\"https://github.com/clabe45/shulkr\"\n                                              />\n                                        </Col>\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                              host=\"github\"\n                                              owner=\"clabe45\"\n                                              name=\"etro\"\n                                              url=\"https://etrojs.dev\"\n                                              description=\"TypeScript video-processing framework\"\n                                              />\n                                        </Col>\n                                        <Col md={{ span: 4 }}>\n                                            <Project\n                                                host=\"itch\"\n                                                name=\"protosim\"\n                                                description=\"Time-travel stealth game\"\n                                                url=\"https://erstelgames.itch.io/protosim\"\n                                                />\n                                        </Col>\n                                    </Row>\n                                </div >\n                            </div>\n                        </Container>\n                    </div>\n                </div>\n                <Social />\n                <Source />\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}